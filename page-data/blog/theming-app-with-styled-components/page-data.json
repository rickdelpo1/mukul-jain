{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-js","path":"/blog/theming-app-with-styled-components/","result":{"data":{"markdownRemark":{"html":"<p>You must have seen “Dark Theme” in many apps nowadays some app even support the totally customizable theme, but how theming works and how it changes on the go? Well, it’s pretty simple with styled-components, most of the steps will be same for any library.</p>\n<h2>Maintain theme at single place</h2>\n<p>Never refer colours, font-weight and font-size in your app directly always use a central place to keep theme-related info, it can be redux too.</p>\n<p>It will look something like</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    primary<span class=\"token operator\">:</span> <span class=\"token string\">'#0043E8'</span><span class=\"token punctuation\">,</span>\r\n    secondary<span class=\"token operator\">:</span> <span class=\"token string\">'#F45D01'</span><span class=\"token punctuation\">,</span>\r\n    alert<span class=\"token operator\">:</span> <span class=\"token string\">'#F73F52'</span><span class=\"token punctuation\">,</span>\r\n    success<span class=\"token operator\">:</span> <span class=\"token string\">'#1BAA53'</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  fontSize<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    body<span class=\"token operator\">:</span> <span class=\"token number\">14</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Half the work is done</p>\n<h2>Theme Provider</h2>\n<p>With <a href=\"https://www.styled-components.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">styled-components</a>, we have an API <a href=\"https://www.styled-components.com/docs/api#themeprovider\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>ThemeProvider</strong></a></p>\n<blockquote>\n<p>A helper component for theming. Injects the theme into all styled components anywhere beneath it in the component tree, via the context API. Check the section on Theming.</p>\n</blockquote>\n<p>This is how it is used</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeProvider</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n&lt;/ThemeProvider</span></code></pre></div>\n<p>Here <code class=\"language-text\">theme</code> is just an object which will be available in each styled-component in <code class=\"language-text\">props</code> can be accessed using <code class=\"language-text\">props.theme</code></p>\n<p>for example</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> Alert <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>p<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n  color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> props <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>alert<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\r\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Theming</h2>\n<p>Just as we created <code class=\"language-text\">theme</code> variable above we have to create a <code class=\"language-text\">darkTheme</code>, it should be same as <code class=\"language-text\">theme</code> structure-wise or if you are using <strong>TypeScript</strong> then there interface should be same, some values can be optional them we have to merge both before using.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> defaultTheme <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    primary<span class=\"token operator\">:</span> <span class=\"token string\">'#0043E8'</span><span class=\"token punctuation\">,</span>\r\n    secondary<span class=\"token operator\">:</span> <span class=\"token string\">'#F45D01'</span><span class=\"token punctuation\">,</span>\r\n    alert<span class=\"token operator\">:</span> <span class=\"token string\">'#F73F52'</span><span class=\"token punctuation\">,</span>\r\n    success<span class=\"token operator\">:</span> <span class=\"token string\">'#1BAA53'</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  fontSize<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    body<span class=\"token operator\">:</span> <span class=\"token number\">14</span>\r\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">const</span> darkTheme <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    primary<span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\r\n    secondary<span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\r\n    alert<span class=\"token operator\">:</span> <span class=\"token string\">'#F73F52'</span><span class=\"token punctuation\">,</span>\r\n    success<span class=\"token operator\">:</span> <span class=\"token string\">'#1BAA53'</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  fontSize<span class=\"token operator\">:</span> defaultTheme<span class=\"token punctuation\">.</span>fontSize\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>While passing theme to ThemeProvider</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeProvider</span></span>\r\n  <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">\"dark\"</span> <span class=\"token operator\">?</span> darkTheme <span class=\"token operator\">:</span> defaultTheme<span class=\"token punctuation\">}</span></span>\r\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeProvider</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>In the above example, the component is connected to redux so we can get theme from redux and on change by the user, it will be reflected instantly.</p>","frontmatter":{"date":"December 08, 2020","slug":"/blog/Theming-App-with-Styled-Components","title":"Theming App with Styled Components"}}},"pageContext":{"id":"ed49416e-8f72-572d-bcb0-6a8dca1a7bbc","frontmatter__slug":"/blog/Theming-App-with-Styled-Components","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["3897982121"]}